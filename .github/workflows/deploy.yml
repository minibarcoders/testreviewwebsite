name: Deploy
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Generate Prisma Client
        run: npx prisma generate

      # Run migrations with error handling
      - name: Apply database migrations
        run: |
          echo "Starting database migrations..."
          npx prisma migrate deploy
          if [ $? -eq 0 ]; then
            echo "Migrations completed successfully"
          else
            echo "Migration failed"
            exit 1
          fi
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      # Run database seed
      - name: Seed database
        run: |
          echo "Starting database seed..."
          npx prisma db seed
          if [ $? -eq 0 ]; then
            echo "Database seeded successfully"
          else
            echo "Database seeding failed"
            exit 1
          fi
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      # Verify database setup
      - name: Verify database setup
        run: |
          echo "Verifying database tables..."
          npx prisma db pull
          if [ $? -eq 0 ]; then
            echo "Database verification successful"
            # Check if Article table exists
            tables=$(npx prisma db pull 2>&1 | grep -c "Article")
            if [ $tables -gt 0 ]; then
              echo "Article table found"
            else
              echo "Article table not found"
              exit 1
            fi
          else
            echo "Database verification failed"
            exit 1
          fi
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      # Add a delay to ensure all database operations complete
      - name: Wait for database operations
        run: |
          echo "Waiting for database operations to settle..."
          sleep 15
          echo "Proceeding with build"

      # Install Vercel CLI after database setup
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      # Pull environment variables
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      # Pass DATABASE_URL to build step
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}